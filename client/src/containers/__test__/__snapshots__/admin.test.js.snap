// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render admin 1`] = `
<div
  className="signin"
>
  <div
    className="wide column"
  >
    <h2
      className="ui teal image header"
    >
      <div
        className="content"
      >
        Log-in
      </div>
    </h2>
    <form
      className="ui large form"
      noValidate={undefined}
      onReset={[Function]}
      onSubmit={[Function]}
    >
      <div
        className="ui stacked segment"
      >
        <div
          className="field"
        >
          <div
            className="ui left icon input"
          >
            <i
              className="user icon"
            />
            <input
              className="field-input"
              disabled={false}
              id="login"
              name="signinForm.login"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="Login"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          className="field"
        >
          <div
            className="ui left icon input"
          >
            <i
              className="lock icon"
            />
            <input
              className="field-input"
              disabled={false}
              id="password"
              name="signinForm.password"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="Password"
              type="password"
              value=""
            />
          </div>
        </div>
        <button
          className="ui fluid large teal submit button"
          type="submit"
        >
          Login
        </button>
      </div>
      <div
        className=""
      >
        <ul
          className="list"
        />
      </div>
    </form>
  </div>
</div>
`;

exports[`Render link form & table if authenticated 1`] = `
<div>
  <form
    className="ui form column massive separator"
    noValidate={undefined}
    onReset={[Function]}
    onSubmit={[Function]}
  >
    <div
      className="field"
    >
      <div
        className="ui action input"
      >
        <input
          autoComplete="off"
          className="field-input"
          disabled={false}
          id="link"
          name="linkForm.linkURL"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="Past your original url"
          type="text"
          value=""
        />
        <button
          className="ui button"
          type="submit"
        >
          Go !
        </button>
      </div>
    </div>
  </form>
  <div
    className="ReactTable"
    style={Object {}}
  >
    <div
      className="rt-table"
      role="grid"
      style={undefined}
    >
      <div
        className="rt-thead -header"
        style={
          Object {
            "minWidth": "270px",
          }
        }
      >
        <div
          className="rt-tr"
          role="row"
          style={undefined}
        >
          <div
            className="rt-th  rt-resizable-header -cursor-pointer"
            onClick={[Function]}
            role="columnheader"
            style={
              Object {
                "flex": "100 0 auto",
                "maxWidth": null,
                "width": "100px",
              }
            }
            tabIndex="-1"
          >
            <div
              className="rt-resizable-header-content"
            >
              Short URL
            </div>
            <div
              className="rt-resizer"
              onMouseDown={[Function]}
              onTouchStart={[Function]}
            />
          </div>
          <div
            className="rt-th  rt-resizable-header -cursor-pointer"
            onClick={[Function]}
            role="columnheader"
            style={
              Object {
                "flex": "100 0 auto",
                "maxWidth": null,
                "width": "100px",
              }
            }
            tabIndex="-1"
          >
            <div
              className="rt-resizable-header-content"
            >
              Long URL
            </div>
            <div
              className="rt-resizer"
              onMouseDown={[Function]}
              onTouchStart={[Function]}
            />
          </div>
          <div
            className="rt-th  rt-resizable-header -sort-desc -cursor-pointer"
            onClick={[Function]}
            role="columnheader"
            style={
              Object {
                "flex": "25 0 auto",
                "maxWidth": null,
                "width": "25px",
              }
            }
            tabIndex="-1"
          >
            <div
              className="rt-resizable-header-content"
            >
              Created at
            </div>
            <div
              className="rt-resizer"
              onMouseDown={[Function]}
              onTouchStart={[Function]}
            />
          </div>
          <div
            className="rt-th  rt-resizable-header -cursor-pointer"
            onClick={[Function]}
            role="columnheader"
            style={
              Object {
                "flex": "15 0 auto",
                "maxWidth": null,
                "width": "15px",
              }
            }
            tabIndex="-1"
          >
            <div
              className="rt-resizable-header-content"
            >
              Visits
            </div>
            <div
              className="rt-resizer"
              onMouseDown={[Function]}
              onTouchStart={[Function]}
            />
          </div>
          <div
            className="rt-th  rt-resizable-header"
            onClick={[Function]}
            role="columnheader"
            style={
              Object {
                "flex": "30 0 auto",
                "maxWidth": null,
                "width": "30px",
              }
            }
            tabIndex="-1"
          >
            <div
              className="rt-resizable-header-content"
            />
            <div
              className="rt-resizer"
              onMouseDown={[Function]}
              onTouchStart={[Function]}
            />
          </div>
        </div>
      </div>
      <div
        className="rt-tbody"
        style={
          Object {
            "minWidth": "270px",
          }
        }
      />
    </div>
    <div
      className="pagination-bottom"
    >
      <div
        className="-pagination"
        style={undefined}
      >
        <div
          className="-previous"
        >
          <button
            className="-btn"
            disabled={true}
            onClick={[Function]}
            type="button"
          >
            Previous
          </button>
        </div>
        <div
          className="-center"
        >
          <span
            className="-pageInfo"
          >
            Page
             
            <div
              className="-pageJump"
            >
              <input
                onBlur={[Function]}
                onChange={[Function]}
                onKeyPress={[Function]}
                type="number"
                value={1}
              />
            </div>
             
            of
             
            <span
              className="-totalPages"
            >
              1
            </span>
          </span>
          <span
            className="select-wrap -pageSizeOptions"
          >
            <select
              onChange={[Function]}
              value={20}
            >
              <option
                value={5}
              >
                5
                 
                rows
              </option>
              <option
                value={10}
              >
                10
                 
                rows
              </option>
              <option
                value={20}
              >
                20
                 
                rows
              </option>
              <option
                value={25}
              >
                25
                 
                rows
              </option>
              <option
                value={50}
              >
                50
                 
                rows
              </option>
              <option
                value={100}
              >
                100
                 
                rows
              </option>
            </select>
          </span>
        </div>
        <div
          className="-next"
        >
          <button
            className="-btn"
            disabled={true}
            onClick={[Function]}
            type="button"
          >
            Next
          </button>
        </div>
      </div>
    </div>
    <div
      className="rt-noData"
    >
      No links found
    </div>
    <div
      className="-loading"
    >
      <div
        className="-loading-inner"
      >
        Loading...
      </div>
    </div>
  </div>
</div>
`;

exports[`Render loading icon if session is ready for auth 1`] = `
<div
  className="loader"
>
  <img
    alt=""
    height="60"
    src="loader.svg"
    width="60"
  />
</div>
`;

exports[`Render loading icon on fetching 1`] = `
<div
  className="loader"
>
  <img
    alt=""
    height="60"
    src="loader.svg"
    width="60"
  />
</div>
`;

exports[`Render signin form is deauthenticated 1`] = `
<div
  className="signin"
>
  <div
    className="wide column"
  >
    <h2
      className="ui teal image header"
    >
      <div
        className="content"
      >
        Log-in
      </div>
    </h2>
    <form
      className="ui large form"
      noValidate={undefined}
      onReset={[Function]}
      onSubmit={[Function]}
    >
      <div
        className="ui stacked segment"
      >
        <div
          className="field"
        >
          <div
            className="ui left icon input"
          >
            <i
              className="user icon"
            />
            <input
              className="field-input"
              disabled={false}
              id="login"
              name="signinForm.login"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="Login"
              type="text"
              value=""
            />
          </div>
        </div>
        <div
          className="field"
        >
          <div
            className="ui left icon input"
          >
            <i
              className="lock icon"
            />
            <input
              className="field-input"
              disabled={false}
              id="password"
              name="signinForm.password"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="Password"
              type="password"
              value=""
            />
          </div>
        </div>
        <button
          className="ui fluid large teal submit button"
          type="submit"
        >
          Login
        </button>
      </div>
      <div
        className=""
      >
        <ul
          className="list"
        />
      </div>
    </form>
  </div>
</div>
`;
